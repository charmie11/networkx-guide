(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{83:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return d})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),o=(n(0),n(95)),i={id:"getting-started",title:"Getting started",sidebar_label:"Getting started",slug:"/getting-started"},d={unversionedId:"getting-started/getting-started",id:"getting-started/getting-started",isDocsHomePage:!1,title:"Getting started",description:"Welcome to the NetworkX getting started guide. The is the perfect place for graph enthusiasts who are starting their journey through the NetworkX Python package.",source:"@site/docs/getting-started/getting-started.md",slug:"/getting-started",permalink:"/getting-started",editUrl:"https://github.com/memgraph/networkx-guide/edit/main/docs/getting-started/getting-started.md",version:"current",sidebar_label:"Getting started",sidebar:"networkx_guide",previous:{title:"Overview",permalink:"/"},next:{title:"Installation",permalink:"/installation"}},l=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"1. Create an empty graph",id:"1-create-an-empty-graph",children:[]},{value:"2. Add nodes",id:"2-add-nodes",children:[]},{value:"3. Add edges",id:"3-add-edges",children:[]},{value:"4. Examine your graph",id:"4-examine-your-graph",children:[]},{value:"5. Removing nodes and edges from the graph",id:"5-removing-nodes-and-edges-from-the-graph",children:[]}],c={toc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Welcome to the NetworkX getting started guide. The is the perfect place for graph enthusiasts who are starting their journey through the NetworkX Python package.\nFollow the next few steps to get a basic understanding of the most important concepts in NetworkX."),Object(o.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(o.b)("p",null,"For the getting started guide you need to have Python and NetworkX installed locally.",Object(o.b)("br",{parentName:"p"}),"\n","If that's not the case for you, check out our ",Object(o.b)("a",{parentName:"p",href:"/installation"},"Installation guide"),"."),Object(o.b)("h2",{id:"1-create-an-empty-graph"},"1. Create an empty graph"),Object(o.b)("p",null,"Create a new text file with the name ",Object(o.b)("inlineCode",{parentName:"p"},"networkx.py")," and the following code:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},"import networkx as nx\n\nG = nx.Graph()\n")),Object(o.b)("p",null,"This code will create an empty NetworkX graph without any nodes or edges.\nA ",Object(o.b)("inlineCode",{parentName:"p"},"Graph")," object is a collection of ",Object(o.b)("strong",{parentName:"p"},"nodes")," (vertices) and ",Object(o.b)("strong",{parentName:"p"},"edges")," (links, relationships)."),Object(o.b)("h2",{id:"2-add-nodes"},"2. Add nodes"),Object(o.b)("p",null,"Nodes can be any hashable object like a string, an image, an XML object, another Graph, etc.\nYou can find the complete list ",Object(o.b)("a",{parentName:"p",href:"https://docs.python.org/3/glossary.html#term-hashable"},"here"),"."),Object(o.b)("p",null,"If you want to add a node to your newly created graph, add the following line to your code:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},"G.add_node(1)\n")),Object(o.b)("p",null,"You can also add multiple nodes at once:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},"G.add_nodes_from([2, 3])\n")),Object(o.b)("h2",{id:"3-add-edges"},"3. Add edges"),Object(o.b)("p",null,"Just like nodes, edges can be added one at a time:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},"G.add_edge(1, 2)\n")),Object(o.b)("p",null,"Multiple edges can be added at once:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},"G.add_edges_from([(1, 2), (1, 3)])\n")),Object(o.b)("h2",{id:"4-examine-your-graph"},"4. Examine your graph"),Object(o.b)("p",null,"To check out the number of nodes or edges, use the ",Object(o.b)("inlineCode",{parentName:"p"},"number_of_nodes()")," and ",Object(o.b)("inlineCode",{parentName:"p"},"number_of_edges()")," methods respectively:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},"print(G.number_of_nodes())\nprint(G.number_of_edges())\n")),Object(o.b)("p",null,"To list out the actual edges and nodes in the graph:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},"print(list(G.nodes))\nprint(list(G.edges))\n")),Object(o.b)("h2",{id:"5-removing-nodes-and-edges-from-the-graph"},"5. Removing nodes and edges from the graph"),Object(o.b)("p",null,"The following methods are used to remove nodes and edges:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Graph.remove_node()"),Object(o.b)("li",{parentName:"ul"},"Graph.remove_nodes_from()"),Object(o.b)("li",{parentName:"ul"},"Graph.remove_edge()"),Object(o.b)("li",{parentName:"ul"},"Graph.remove_edges_from()")),Object(o.b)("p",null,"For example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},"G.remove_node(1)\nG.remove_nodes_from([1, 2, 3])\n")))}p.isMDXComponent=!0},95:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return g}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),p=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},s=function(e){var t=p(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=p(n),b=r,g=s["".concat(i,".").concat(b)]||s[b]||u[b]||o;return n?a.a.createElement(g,d(d({ref:t},c),{},{components:n})):a.a.createElement(g,d({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d.mdxType="string"==typeof e?e:r,i[1]=d;for(var c=2;c<o;c++)i[c]=n[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);